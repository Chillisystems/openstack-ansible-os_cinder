---
# Copyright 2014, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Install distro packages
  package:
    name: "{{ cinder_package_list }}"
    state: "{{ cinder_package_state }}"
    update_cache: "{{ (ansible_pkg_mgr in ['apt', 'zypper']) | ternary('yes', omit) }}"
    cache_valid_time: "{{ (ansible_pkg_mgr == 'apt') | ternary(cache_timeout, omit) }}"
  register: install_packages
  until: install_packages | success
  retries: 5
  delay: 2

- name: Create developer mode constraint file
  copy:
    dest: "/opt/developer-pip-constraints.txt"
    content: |
      {% for item in cinder_developer_constraints %}
      {{ item }}
      {% endfor %}
  when: cinder_developer_mode | bool

- name: Install requires pip packages
  pip:
    name: "{{ cinder_requires_pip_packages }}"
    state: "{{ cinder_pip_package_state }}"
    extra_args: >-
      {{ cinder_developer_mode | ternary(pip_install_developer_constraints | default('--constraint /opt/developer-pip-constraints.txt'), '') }}
      {{ (pip_install_upper_constraints is defined) | ternary('--constraint ' + pip_install_upper_constraints | default(''),'') }}
      {{ pip_install_options | default('') }}
  register: install_packages
  until: install_packages|success
  retries: 5
  delay: 2

- name: Retrieve checksum for venv download
  uri:
    url: "{{ cinder_venv_download_url | replace('tgz', 'checksum') }}"
    return_content: yes
  register: cinder_venv_checksum
  when: cinder_venv_download | bool

- name: Attempt venv download
  get_url:
    url: "{{ cinder_venv_download_url }}"
    dest: "/var/cache/{{ cinder_venv_download_url | basename }}"
    checksum: "sha1:{{ cinder_venv_checksum.content | trim }}"
  register: cinder_get_venv
  when: cinder_venv_download | bool

- name: Remove existing venv
  file:
    path: "{{ cinder_bin | dirname }}"
    state: absent
  when: cinder_get_venv | changed

- name: Create cinder venv dir
  file:
    path: "{{ cinder_bin | dirname }}"
    state: directory
  register: cinder_venv_dir
  when: cinder_get_venv | changed

- name: Unarchive pre-built venv
  unarchive:
    src: "/var/cache/{{ cinder_venv_download_url | basename }}"
    dest: "{{ cinder_bin | dirname }}"
    copy: "no"
  when: cinder_get_venv | changed
  notify: Restart cinder services

- name: Install pip packages
  pip:
    name: "{{ cinder_pip_packages }}"
    state: "{{ cinder_pip_package_state }}"
    virtualenv: "{{ cinder_bin | dirname }}"
    virtualenv_site_packages: "no"
    extra_args: >-
      {{ cinder_developer_mode | ternary(pip_install_developer_constraints | default('--constraint /opt/developer-pip-constraints.txt'), '') }}
      {{ (pip_install_upper_constraints is defined) | ternary('--constraint ' + pip_install_upper_constraints | default(''),'') }}
      {{ pip_install_options | default('') }}
  register: install_packages
  until: install_packages|success
  retries: 5
  delay: 2
  when: cinder_get_venv | failed or cinder_get_venv | skipped
  notify: Restart cinder services

- name: Remove python from path first (CentOS, openSUSE)
  file:
    path:  "{{ cinder_bin | dirname }}/bin/python2.7"
    state: "absent"
  when:
    - ansible_pkg_mgr in ['yum', 'dnf', 'zypper']
    - cinder_get_venv | changed

- name: Update virtualenv path
  command: >
    virtualenv-tools --update-path=auto --reinitialize {{ cinder_bin | dirname }}
  when: cinder_get_venv | changed

- name: Initialise the upgrade facts
  ini_file:
    dest: "/etc/ansible/facts.d/openstack_ansible.fact"
    section: cinder
    option: "{{ item }}"
    value: "True"
  with_items:
    - "need_online_data_migrations"
    - "need_service_restart"
  when: (cinder_get_venv | changed) or
        (cinder_venv_dir | changed) or
        (install_packages | changed) or
        (ansible_local is not defined) or
        ('openstack_ansible' not in ansible_local) or
        ('cinder' not in ansible_local['openstack_ansible']) or
        ('need_online_data_migrations' not in ansible_local['openstack_ansible']['cinder']) or
        ('need_service_restart' not in ansible_local['openstack_ansible']['cinder'])

- name: Record the venv tag deployed
  ini_file:
    dest: "/etc/ansible/facts.d/openstack_ansible.fact"
    section: cinder
    option: venv_tag
    value: "{{ cinder_venv_tag }}"
